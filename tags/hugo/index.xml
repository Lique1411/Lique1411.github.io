<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on Serein</title><link>https://Lique1411.github.io/tags/hugo/</link><description>Recent content in Hugo on Serein</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 07 Nov 2024 15:00:00 +0800</lastBuildDate><atom:link href="https://Lique1411.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>使用github+hugo部署博客</title><link>https://Lique1411.github.io/p/%E4%BD%BF%E7%94%A8github-hugo%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</link><pubDate>Thu, 07 Nov 2024 15:00:00 +0800</pubDate><guid>https://Lique1411.github.io/p/%E4%BD%BF%E7%94%A8github-hugo%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>本文记录如何使用github的两个仓库进行部署hugo生成的静态html博客&lt;/p>
&lt;h2 id="流程">流程
&lt;/h2>&lt;h3 id="步骤1">步骤1：
&lt;/h3>&lt;p>在github上建立一个私有库，用于存放hugo的源代码（后续记录如何本地安装并调试hugo进行网页效果展示）&lt;/p>
&lt;h3 id="步骤2">步骤2：
&lt;/h3>&lt;p>再建立另一个仓库：0hzc.github.io，此仓库命名必须命名为xxx.github.io，xxx为你的github用户名&lt;/p>
&lt;h3 id="步骤3">步骤3：
&lt;/h3>&lt;p>在本地调试完hugo的网页确定无误后，在目录下新建.github文件夹，此文件夹与hugo new site 的文件夹同级,再在.github文件夹下新建一个名为workflows的文件夹&lt;/p>
&lt;h3 id="步骤4">步骤4：
&lt;/h3>&lt;p>在.github/workflows文件夹下新建xxx.yml文件，xxx随意命名，此文件为githubwebpages的自动部署文件，内容可填写为如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">name: github pages &lt;span class="c1"># 名字自取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> push:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> branches:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - main &lt;span class="c1"># 这里的意思是当 main分支发生push的时候，运行下面的jobs，这里先改为github-actions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jobs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> deploy: &lt;span class="c1"># 任务名自取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> runs-on: ubuntu-latest &lt;span class="c1"># 在什么环境运行任务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> steps:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - uses: actions/checkout@v2 &lt;span class="c1"># 引用actions/checkout这个action，与所在的github仓库同名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> submodules: &lt;span class="nb">true&lt;/span> &lt;span class="c1"># Fetch Hugo themes (true OR recursive) 获取submodule主题&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fetch-depth: &lt;span class="m">0&lt;/span> &lt;span class="c1"># Fetch all history for .GitInfo and .Lastmod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Setup Hugo &lt;span class="c1"># 步骤名自取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: peaceiris/actions-hugo@v2 &lt;span class="c1"># hugo官方提供的action，用于在任务环境中获取hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hugo-version: &lt;span class="s1">&amp;#39;latest&amp;#39;&lt;/span> &lt;span class="c1"># 获取最新版本的hugo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> extended: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> run: hugo --minify &lt;span class="c1"># 使用hugo构建静态网页&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - name: Deploy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> uses: peaceiris/actions-gh-pages@v3 &lt;span class="c1"># 一个自动发布github pages的action&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> with:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> external_repository: 0Hzc/0Hzc.github.io &lt;span class="c1"># 发布到哪个repo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> personal_token: &lt;span class="si">${&lt;/span>&lt;span class="p">{ secrets.hzcblog &lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="o">}&lt;/span> &lt;span class="c1"># 发布到其他repo需要提供上面生成的personal access token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> publish_dir: ./public &lt;span class="c1"># 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> publish_branch: main &lt;span class="c1"># 发布到哪个branch&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>其中需要做修改的为“ external_repository: 0Hzc/0Hzc.github.io”需要将对应的部分改为步骤2的仓库名，“personal_token: ${{ secrets.hzcblog }}”需要将对应的部分改为生成的personal access token&lt;/p>
&lt;h3 id="步骤5">步骤5：
&lt;/h3>&lt;p>使用git工具推送至步骤一建立的仓库即可&lt;/p>
&lt;h2 id="git的相关使用">git的相关使用
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#将本地文件进行git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git init
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#连接远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote add origin xxxxx &lt;span class="c1">#origin是远程仓库的别名，可以自定义，后续推送至仓库时需要用到这个别名，xxxx是远程仓库的url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#检查连接的远程仓库，以及在本地的别名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote -v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#将文件/修改的文件，添加至暂存区&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git add . &lt;span class="c1">#也可以指定文件添加 将.改为具体文件路径&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#可查看暂存区有哪些文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#确定暂存区无误，确定提交&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;提交信息&amp;#34;&lt;/span> &lt;span class="c1">#提交信息为自定义，可以写本次提交的说明&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#将暂存区的文件提交至远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin main &lt;span class="c1">#origin是远程仓库的别名，main是远程仓库的分支（branch），也可以自定义&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#删除本地与远程仓库的连接&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git remote remove origin &lt;span class="c1">#origin是远程仓库在本地的别名&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="参考链接">参考链接
&lt;/h2>&lt;p>&lt;a class="link" href="https://krislinzhao.github.io/docs/create-a-wesite-using-github-pages-and-hugo/" target="_blank" rel="noopener"
>https://krislinzhao.github.io/docs/create-a-wesite-using-github-pages-and-hugo/&lt;/a>&lt;/p></description></item><item><title>How to deploy blog system by hugo</title><link>https://Lique1411.github.io/p/how-to-deploy-blog-system-by-hugo/</link><pubDate>Tue, 05 Nov 2024 15:00:00 +0800</pubDate><guid>https://Lique1411.github.io/p/how-to-deploy-blog-system-by-hugo/</guid><description>&lt;p>this article is to record how to use hugo to build blog&lt;/p>
&lt;h2 id="introduction">introduction
&lt;/h2>&lt;p>this server is running on github&amp;rsquo;s codespace . I&amp;rsquo;ll try to solve this problem that can&amp;rsquo;t open the website by access 0Hzc.github.io&lt;/p>
&lt;h3 id="1step1">1.step1
&lt;/h3>&lt;p>get ready for the environment,to deploy this server need go , git ,and install hugo_extrended .
Notice that hugo edition is hugo_extrended not the standard hugo : if use the standard hugo,you will can&amp;rsquo;t deploy other themes.&lt;/p>
&lt;h3 id="2-step2">2. step2
&lt;/h3>&lt;p>according to the docs from hugo&amp;rsquo;s official websites,use the following command:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">hugo new site quickstart //dirname is the directory &lt;span class="k">for&lt;/span> storing the project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> quickstart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git submodule add https://xxxxxxx.git themes/xxx. //xxxxxxx is the url &lt;span class="k">for&lt;/span> the themes which you choose,xxx is the name of themes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;theme = &amp;#39;xxx&amp;#39;&amp;#34;&lt;/span> &amp;gt;&amp;gt; hugo.toml. // this &lt;span class="nb">command&lt;/span> is add &lt;span class="s2">&amp;#34;theme = &amp;#39;xxx&amp;#39;&amp;#34;&lt;/span> into the hugo.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>